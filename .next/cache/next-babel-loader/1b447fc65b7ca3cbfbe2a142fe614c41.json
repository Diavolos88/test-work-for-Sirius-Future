{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\salov\\\\Desktop\\\\sirius\\\\components\\\\Graph\\\\Graph.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport s from './graph.module.css';\nimport { Area, AreaChart, CartesianGrid, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"recharts\";\nimport React from 'react';\nimport { updateFirstAC } from \"../../redux/firstGraphReduser\";\nimport { connect } from 'react-redux';\nexport default function MyGraph(_ref) {\n  var name1 = _ref.name1,\n      name2 = _ref.name2,\n      name3 = _ref.name3,\n      company = _ref.company;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.field,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: name1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: name2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: name3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GraphContainer, {\n      company: company\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_c = MyGraph;\n\nvar Graph = /*#__PURE__*/function (_React$Component) {\n  _inherits(Graph, _React$Component);\n\n  var _super = _createSuper(Graph);\n\n  function Graph(props) {\n    var _this;\n\n    _classCallCheck(this, Graph);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      money: 0,\n      moneyEarly: 0,\n      procent: 0,\n      update: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"timer\", void 0);\n\n    return _this;\n  }\n\n  _createClass(Graph, [{\n    key: \"createDates\",\n    value: function createDates(num) {\n      var now = new Date(); // @ts-ignore\n\n      return _toConsumableArray(Array(num).keys());\n    }\n  }, {\n    key: \"createValues\",\n    value: function createValues(dates) {\n      var vals = [];\n      dates.map(function (d) {\n        vals.push({\n          date: d,\n          value: Math.floor(Math.random() * 7)\n        });\n      });\n      return vals;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.timer = setInterval(function () {\n        _this2.setState(_objectSpread(_objectSpread({}, _this2.state), {}, {\n          update: !_this2.state.update\n        }));\n      }, 5000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.timer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var name = \"сен\";\n      var nameHover = \"сентября\";\n      var hmValues = 29;\n      var dates = this.createDates(hmValues).slice(1);\n      var data = this.createValues(dates);\n      var fullMany = 0;\n      data.forEach(function (e) {\n        fullMany += e.value;\n      });\n      var procentNow = 0;\n\n      if (this.state.moneyEarly) {\n        procentNow = Math.floor((fullMany - this.state.moneyEarly) / fullMany * 100);\n        this.state.procent = procentNow;\n      }\n\n      this.state.moneyEarly = fullMany;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.graphContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.upperGraph,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.cash,\n            children: [\"\\u0412\\u044B\\u0440\\u0443\\u0447\\u043A\\u0430: \", /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [fullMany, \" 000 \\u0440\\u0443\\u0431.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 59\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: procentNow > 0 ? s.proc + \" \" + s.upper : s.proc + \" \" + s.fallen,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: procentNow > 0 ? s.errow + \" \" + s.upper : s.errow + \" \" + s.fallen,\n                  children: \" \\u21AF \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 103\n                }, this), \" \", procentNow, \" %\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 92\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 54\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: this.props.company === \"yandex\" ? s.yandexLogo : s.paypalLogo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          maxHeight: \"200px\",\n          width: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(AreaChart, {\n            data: data,\n            margin: {\n              top: 20,\n              right: 30,\n              left: 10,\n              bottom: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n              children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n                id: \"colorValue\",\n                x1: \"0\",\n                y1: \"0\",\n                x2: \"0\",\n                y2: \"1\",\n                children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n                  offset: \"5%\",\n                  stopColor: \"#8884d8\",\n                  stopOpacity: 0.8\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n                  offset: \"95%\",\n                  stopColor: \"#8884d8\",\n                  stopOpacity: 0.0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"date\",\n              unit: \"\\u0441\\u0435\\u043D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              unit: \"\\u0442\\u044B\\u0441. \\u20BD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n              vertical: false,\n              strokeDashArray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              wrapperStyle: {\n                backgroundColor: \"red\"\n              },\n              labelStyle: {\n                color: \"grey\"\n              },\n              itemStyle: {\n                color: \"black\"\n              },\n              formatter: function formatter(value, name) {\n                return \"\".concat(value, \" \\u0442\\u044B\\u0441. \\u20BD\");\n              },\n              labelFormatter: function labelFormatter(value) {\n                return \"\\u0412\\u044B\\u0440\\u0443\\u0447\\u043A\\u0430 \\u0437\\u0430 \".concat(value, \" \\u0441\\u0435\\u043D\\u0442\\u044F\\u0431\\u0440\\u044F\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Area, {\n              type: \"monotone\",\n              dataKey: \"value\",\n              stroke: \"blue\",\n              fill: \"url(#colorValue)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Graph;\n}(React.Component);\n\nvar mapStateToProp = function mapStateToProp(state) {\n  return {\n    update: state.firstGraph.update,\n    moneyEarlyState: state.firstGraph.moneyEarly\n  };\n};\n\nvar GraphContainer = connect(mapStateToProp, {\n  updateFirstAC: updateFirstAC\n})(Graph);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyGraph\");","map":{"version":3,"sources":["C:/Users/salov/Desktop/sirius/components/Graph/Graph.tsx"],"names":["s","Area","AreaChart","CartesianGrid","ResponsiveContainer","Tooltip","XAxis","YAxis","React","updateFirstAC","connect","MyGraph","name1","name2","name3","company","field","Graph","props","money","moneyEarly","procent","update","num","now","Date","Array","keys","dates","vals","map","d","push","date","value","Math","floor","random","timer","setInterval","setState","state","clearTimeout","name","nameHover","hmValues","createDates","slice","data","createValues","fullMany","forEach","e","procentNow","graphContainer","upperGraph","cash","proc","upper","fallen","errow","yandexLogo","paypalLogo","top","right","left","bottom","backgroundColor","color","Component","mapStateToProp","firstGraph","moneyEarlyState","GraphContainer"],"mappings":"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","sourcesContent":["import s from './graph.module.css'\r\nimport {Area, AreaChart, CartesianGrid, Line, ResponsiveContainer, Tooltip, XAxis, YAxis} from \"recharts\";\r\nimport React from 'react'\r\nimport {updateFirstAC} from \"../../redux/firstGraphReduser\";\r\nimport {connect} from 'react-redux';\r\nimport {RootStoreType} from '../../redux/redux';\r\nimport {bool, number} from \"prop-types\";\r\n\r\n\r\ntype MyGraphType = {\r\n    name1: string,\r\n    name2: string,\r\n    name3: string,\r\n    company: string\r\n}\r\n\r\nexport default function MyGraph({name1, name2, name3, company}: MyGraphType) {\r\n    return (\r\n        <div className={s.field}>\r\n            <button>{name1}</button>\r\n            <button>{name2}</button>\r\n            <button>{name3}</button>\r\n            <GraphContainer company={company}/>\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface Props {\r\n    company: string;\r\n}\r\n\r\ninterface State {\r\n    money: number,\r\n    moneyEarly: number,\r\n    procent: number,\r\n    update: boolean\r\n}\r\n\r\nclass Graph extends React.Component<Props, State> {\r\n    state = {\r\n        money: 0,\r\n        moneyEarly: 0,\r\n        procent: 0,\r\n        update: true\r\n    }\r\n    timer: any;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createDates(num: number) {\r\n        const now = new Date();\r\n        // @ts-ignore\r\n        return [...Array(num).keys()];\r\n    }\r\n\r\n    createValues(dates: Array<number>) {\r\n        let vals: Array<{ date: number, value: number }> = [];\r\n        dates.map(d => {\r\n            vals.push({\r\n                date: d,\r\n                value: Math.floor(Math.random() * 7)\r\n            });\r\n        });\r\n\r\n        return vals;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timer = setInterval(() => {\r\n            this.setState({...this.state, update: !this.state.update})\r\n        }, 5000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timer);\r\n    }\r\n\r\n    render() {\r\n        let name = \"сен\"\r\n        let nameHover = \"сентября\"\r\n        let hmValues = 29\r\n        let dates = this.createDates(hmValues).slice(1);\r\n        let data = this.createValues(dates);\r\n        let fullMany = 0\r\n        data.forEach((e) => {\r\n            fullMany += e.value\r\n        })\r\n        let procentNow = 0\r\n        if (this.state.moneyEarly) {\r\n            procentNow = Math.floor(((fullMany - this.state.moneyEarly) / fullMany) * 100)\r\n            this.state.procent = procentNow\r\n        }\r\n        this.state.moneyEarly = fullMany\r\n        return (\r\n            <div className={s.graphContainer}>\r\n                <div className={s.upperGraph}>\r\n                    <div className={s.cash}>Выручка: <div><span>{fullMany} 000 руб.</span> <span\r\n                        className={procentNow > 0 ? s.proc + \" \" + s.upper : s.proc + \" \" + s.fallen}><span\r\n                        className={procentNow > 0 ? s.errow + \" \" + s.upper : s.errow + \" \" + s.fallen}> ↯ </span> {procentNow} %</span>\r\n                    </div></div>\r\n                    <div className={this.props.company === \"yandex\" ? s.yandexLogo : s.paypalLogo}/>\r\n                </div>\r\n\r\n                <ResponsiveContainer maxHeight={\"200px\"} width=\"100%\">\r\n                    <AreaChart\r\n                        data={data}\r\n                        margin={{top: 20, right: 30, left: 10, bottom: 10}}\r\n                    >\r\n                        <defs>\r\n                            <linearGradient id=\"colorValue\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\r\n                                <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0.0}/>\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <XAxis dataKey=\"date\" unit='сен'/>\r\n                        <YAxis unit='тыс. ₽'/>\r\n                        <CartesianGrid vertical={false} strokeDashArray=\"3 3\"/>\r\n                        <Tooltip\r\n                            wrapperStyle={{backgroundColor: \"red\"}}\r\n                            labelStyle={{color: \"grey\"}}\r\n                            itemStyle={{color: \"black\"}}\r\n                            formatter={function (value, name) {\r\n                                return `${value} тыс. ₽`;\r\n                            }}\r\n                            labelFormatter={function (value) {\r\n                                return `Выручка за ${value} сентября`;\r\n                            }}\r\n                        />\r\n                        <Area\r\n                            type=\"monotone\"\r\n                            dataKey=\"value\"\r\n                            stroke=\"blue\"\r\n                            fill=\"url(#colorValue)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProp = (state: RootStoreType): { update: boolean, moneyEarlyState: number } => {\r\n    return {\r\n        update: state.firstGraph.update,\r\n        moneyEarlyState: state.firstGraph.moneyEarly\r\n    }\r\n}\r\n\r\nconst GraphContainer = connect(mapStateToProp, {updateFirstAC})(Graph)\r\n"]},"metadata":{},"sourceType":"module"}